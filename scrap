/*
        float pph = .5 * (float)( pulsePhase( t ) );

        int relphase = t % period;
        int distanceFromPulseCenter = min( relphase - phase, phase + ( period - relphase ) );

        // FIXME REMOVE BRANCHING LOGIC
       // float skph = max( pph, ( 1. - pph ) * sign( distanceFromPulseCenter ) );/// abs( distanceFromPulseCenter ) );
        float skph;
        if ( distanceFromPulseCenter <= 0 )
            skph = pph;
        else if ( distanceFromPulseCenter < halfpulse * 2 )
            skph = 1. - pph;
        else
            skph = 0.;
/*

        float skph = 
        int relphase = t % period;
      float distancePastPulseOnset = /*max( 0., min( relphase - phase - halfpulse, phase - halfpulse + ( period - relphase ) ) ;//);

 /*       float pulse = (float)( halfpulse * 2 ); // FIXME -1 OR WITHOUT -1 ?

        float skph = distancePastPulseOnset / pulse ;
*///        float skph = 1. - (float)( clamp( pulse - abs( distanceFromPulseOnset ), 0., pulse ) / pulse );

/*        int relphase = t % period;
        int distanceFromPulseCenter = min( relphase - phase, phase + ( period - relphase ) );
 
        float skph = (float)( clamp( (float)( halfpulse - abs( distanceFromPulseCenter ) ), 0., (float)( halfpulse ) )
                                / (float)( 2. * halfpulse ) );

        // So far it's the same as pulsePhase(), but scaled to [ 0, .5 ]
        // Now, if we're past the pulse center, we need to add .5
        // FIXME: This feels inelegant, can we improve it?
        skph += max( 0., .5 * distanceFromPulseCenter / abs( distanceFromPulseCenter ) );
*/
